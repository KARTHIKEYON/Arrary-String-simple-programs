1.Given a non-empty sequence of characters str, return true if sequence is Binary, else return false

class GfG
{
	boolean isBinary(String str)
	{
	  for(int i=0;i<str.length();i++)
	  {
	      if(str.charAt(i)!=0 && str.charAt(i)!= 1){
	          return false;
	      }
	  }
	  return true;
	}
}

output:
str = 101
Output:
1
Explanation:
Since string contains only 0 and 1, output is 1.
---------------------------------------------------------------------------------------------------------------------
2.Given a list of names, display the longest name. 
If there are multiple names of the longest size then return the first occurring name .

class Solution {
    public static String longest(int n, String[] names) {
        int max=0;
        int a=0;
        for(int i=0;i<n;i++){
            String s =names[i];
            if(max<s.length()){
                max=s.length();
                a=i;
            }
        }
        return names[a];
    }
}


output:
Input:
n = 5
names[] = { "Geek", "Geeks", "Geeksfor", "GeeksforGeek", "GeeksforGeeks" }
Output: GeeksforGeeks
Explanation: name "GeeksforGeeks" has maximum length among all names. 
-----------------------------------------------------------------------------------------------------------------
3.Given a string s , return reverse of the string as output.


class Solution {
    static String revStr(String s) {
        
        StringBuilder str=new StringBuilder(s);
        return str.reverse().toString();
    }
}

output:
s = "GeeksforGeeks"
Output: "skeeGrofskeeG" 
Explanation: Reverse string of "GeeksforGeeks" will be "skeeGrofskeeG"
----------------------------------------------------------------------------------------------------------------
4.Given a string, remove the vowels from the string.

class Solution {
    String removeVowels(String S) {
        return S.replaceAll("[aeiouAEIOU]","");
    }
}

output:
Input: S = "welcome to geeksforgeeks"
Output: wlcm t gksfrgks
Explanation: Ignore vowels and print other
characters 
---------------------------------------------------------------------------------------------------------------
